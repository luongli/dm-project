var host = location.protocol + "//" + window.location.hostname + (location.port ? ':'+location.port: '');
$(document).ready(function() {
  // get all
  $.ajax({
    type: "GET",
    url: host + '/api/product',
    error: onGetProductError,
    dataType: "json",
  }).done(showProducts);

  // when user click on des-key input
  $(document).on('click', '.des-key', function () {
    var parent = $(this).parents('.des-row');
    addSibling(parent);
  });

  // when user click on des-value input
  $(document).on('click', '.des-value', function () {
    var parent = $(this).parents('.des-row');
    addSibling(parent);
  });

  // when user clicks on add subrow button
  // $(document).on('click', '.add-row-button', function() {
  //   console.log("ok");
  //   // get parent object
  //   var parent = $(this).parents('.des-row');
  //
  //   // hide des-value and add-row-button
  //   parent.find('.des-value').hide();
  //   parent.find('.add-row-button').hide();
  //
  //   // get its offset data
  //   var offset = parent.data("offset");
  //   // add a new sibling row with the same offset
  //   addSibling(parent);
  //   // add a new sub row
  //   parent.after(getDesRowHTML(offset + 1));
  // });

  // when user click on add button
  $(document).on('click', '#add-button', function() {
    var name = $('#product-name').val();
    var type = $('#product-type').val();
    var price = $('#product-price').val();
    var data = {
      name: name,
      type: type,
      price: price
    }
    // get detail value
    $('.des-row').each(function() {
      var key = $(this).find('.des-key').val();
      var value = $(this).find('.des-value').val();
      if(key!=='') {
        // if the key is not empty
        data[key] = value;
      }
    });
    console.log(data);
    // send request
    $.ajax({
      type: "POST",
      url: host + '/api/product',
      data: data,
      success: onCreateSuccess,
      error: onCreateError,
      contentType: "application/x-www-form-urlencoded",
      dataType: "json",
    }); // end ajax request
  });
});

function onCreateSuccess() {
  alert("created successfully");
  //location.reload();
}

function onCreateError(error) {
  console.log(error);
  alert("Opps! Something went wrong.");
  //location.reload();
}

function addSibling(obj) {
  if (!obj.data('generated')) {
    // if sibling has not been generated by this element yet
    // mark this element as added new sibling
    obj.data('generated', true);
    obj.after(getDesRowHTML(obj.data('offset')));
  }
  obj.css({opacity: 1});
}

function getDesRowHTML(parentOffset) {
  if(parentOffset > 2) {
    // we only allow 2 nested levels
    return;
  }

  var html = '<!-- sub row lv1 -->\
  <div class="row des-row" data-offset="' + (parentOffset) + '" data-generated="false">\
    <div class="col-xs-2 col-xs-offset-' + (parentOffset) +'">\
      <input class="form-control des-key" name="description" type="text" value="" placeholder="key">\
    </div>\
    <div class="col-xs-'+ (10-parentOffset) + '">\
      <input class="form-control des-value" name="description" type="text" value="" placeholder="value">\
    </div>\
  </div>';
  return html;
}

function onGetProductError(error) {
  alert("Opps! Something went wrong.")
}

// show the list of products
function showProducts(response) {
  // console.log(response);
  if(response.status) {
    if(response.products.length) {
      // if the length of product list is not 0
    } else {
      // if the length of product list is 0
      $('.product-list').html("The current list of products is empty");
    }
  }
}
